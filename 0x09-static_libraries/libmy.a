!<arch>
0-isupper.o/    0           0     0     644     221       `
#include "main.h"

/**
 * _isupper - checks if a character is uppercase
 *
 * @c: the character to check
 *
 * Return: 1 if the character is uppercase, 0 otherwise
 */
int _isupper(int c)
{
/* empty body */
return (0);
}

0-memset.o/     0           0     0     644     358       `
#include "main.h"

/**
 * _memset - fills the first n bytes of the memory area pointed
 * with the constant byte b
 *
 * @s: the pointer to the memory area to be filled
 * @b: the value to be set
 * @n: the number of bytes to be set to the value
 *
 * Return: a pointer to the memory area s
 */
char *_memset(char *s, char b, unsigned int n)
{
return (s);
}
0-strcat.o/     0           0     0     644     232       `
#include "main.h"

/**
 * _strcat - concatenates two strings
 *
 * @dest: the destination string
 * @src: the source string
 *
 * Return: a pointer to the resulting string
 */
char *_strcat(char *dest, char *src)
{
return (dest);
}
1-isdigit.o/    0           0     0     644     200       `
#include "main.h"

/**
 * _isdigit - checks if a character is a digit
 *
 * @c: the character to check
 *
 * Return: 1 if the character is a digit, 0 otherwise
 */
int _isdigit(int c)
{
return (0);
}
1-memcpy.o/     0           0     0     644     344       `
#include "main.h"

/**
 * _memcpy - copies n bytes from memory area src to memory dest
 *
 * @dest: pointer to the destination array where the content is 
 * @src: pointer to the source of data to be copied
 * @n: number of bytes to copy
 *
 * Return: pointer to dest
 */
char *_memcpy(char *dest, char *src, unsigned int n)
{
return (dest);
}
1-strncat.o/    0           0     0     644     306       `
#include "main.h"

/**
 * _strncat - concatenates n characters from src to dest
 *
 * @dest: the destination string
 * @src: the source string
 * @n: the number of characters to concatenate
 *
 * Return: a pointer to the resulting string
 */
char *_strncat(char *dest, char *src, int n)
{
return (dest);
}
100-atoi.o/     0           0     0     644     179       `
#include "main.h"

/**
 * _atoi - converts a string to an integer
 *
 * @s: the string to convert
 *
 * Return: the converted integer value
 */
int _atoi(char *s)
{
return (0);
}

2-strchr.o/     0           0     0     644     276       `
#include "main.h"
#include <stdlib.h>

/**
 * _strchr - locates the first occurrence of character
 *
 * @s: pointer to the string to be searched
 * @c: character to be located
 *
 * Return: pointer to the first occurrence
 */
char *_strchr(char *s, char c)
{
return (NULL);
}
2-strlen.o/     0           0     0     644     194       `
#include "main.h"

/**
 * _strlen - computes the length of a string
 *
 * @s: the string to compute the length of
 *
 * Return: the length of the string
 */
int _strlen(char *s)
{
return (0);
}
2-strncpy.o/    0           0     0     644     295       `
#include "main.h"

/**
 * _strncpy - copies n characters from src to dest
 *
 * @dest: the destination buffer
 * @src: the source string
 * @n: the number of characters to copy
 *
 * Return: a pointer to the destination buffer
 */
char *_strncpy(char *dest, char *src, int n)
{
return (dest);
}

3-islower.o/    0           0     0     644     204       `
#include "main.h"

/**
 * _islower - checks if a character is lowercase
 *
 * @c: the character to check
 *
 * Return: 1 if the character is lowercase, 0 otherwise
 */
int _islower(int c)
{
return (0);
}
3-puts.o/       0           0     0     644     135       `
#include "main.h"

/**
 * _puts - prints a string to stdout
 *
 * @s: the string to print
 */
void _puts(char *s)
{
/* empty body */
}

3-strcmp.o/     0           0     0     644     290       `
#include "main.h"

/**
 * _strcmp - compares two strings
 *
 * @s1: the first string to compare
 * @s2: the second string to compare
 *
 * Return: an integer less than, equal to, or greater than zero
 * depending on the comparison result
 */
int _strcmp(char *s1, char *s2)
{
return (0);
}
3-strspn.o/     0           0     0     644     278       `
#include "main.h"

/**
 * _strspn - calculates the length of the initial
 *
 * @s: pointer to the string to be searched
 * @accept: pointer to the string containing
 *
 * Return: the number of bytes in the initial
 */
unsigned int _strspn(char *s, char *accept)
{
return (0);
}
4-isalpha.o/    0           0     0     644     206       `
#include "main.h"

/**
 * _isalpha - checks if a character is alphabetic
 *
 * @c: the character to check
 *
 * Return: 1 if the character is alphabetic, 0 otherwise
 */
int _isalpha(int c)
{
return (0);
}
4-strpbrk.o/    0           0     0     644     347       `
#include "main.h"
#include <stdlib.h>

/**
 * _strpbrk - searches a string for any of a set of bytes
 *
 * @s: pointer to the string to be searched
 * @accept: pointer to the string containing the characters to match
 *
 * Return: pointer to the byte in s that matches one of the bytes
 */
char *_strpbrk(char *s, char *accept)
{
return (NULL);
}

5-strstr.o/     0           0     0     644     302       `
#include "main.h"
#include "stdlib.h"

/**
 * _strstr - locates a substring
 *
 * @haystack: pointer to the string to be searched
 * @needle: pointer to the substring to be located
 *
 * Return: pointer to the beginning of the located
 */
char *_strstr(char *haystack, char *needle)
{
return (NULL);
}
6-abs.o/        0           0     0     644     204       `
#include "main.h"

/**
 * _abs - computes the absolute value of an integer
 *
 * @n: the integer to compute the absolute value of
 *
 * Return: the absolute value of n
 */
int _abs(int n)
{
return (0);
}
9-strcpy.o/     0           0     0     644     253       `
#include "main.h"

/**
 * _strcpy - copies the string pointed to by src to dest
 *
 * @dest: the destination buffer
 * @src: the source string
 *
 * Return: a pointer to the destination string
 */
char *_strcpy(char *dest, char *src)
{
return (dest);
}

_putchar.o/     0           0     0     644     211       `
#include "main.h"

/**
 * _putchar - writes the character c to stdout
 *
 * @c: the character to be written
 *
 * Return: On success, the number of characters written. O
 */
int _putchar(char c)
{
return (0);
}

